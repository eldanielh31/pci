#NOTICE: You need to point this to the image craff, preferably the one specified in this repositories README : qsp-driver-support.craff
$disk0_image=/home/daniel/simics-projects/academia-collaboration/simics-project/qsp-driver-support.craff
run-command-file "%script%/firststeps.simics"
script-branch {
    #wait until login
    board.serconsole.con.bp-wait-for-console-string "simics@cl-qsp" 
    #agent manager is an object that is used to transfer files or run commands inside the simulation
    $matic0 = (start-agent-manager)
    $agent = ($matic0.connect-to-agent)
    #$agent.cd /home/simics/
    #$agent.wait-for-job
    #$agent.upload-dir sort_magic 
    #$agent.wait-for-job
    #$agent.run "chmod 777 -R sort_magic"
    #$agent.cd "sort_magic"
    #($agent.upload (sim->simics_base + "/src/include/simics/" + "magic-instruction.h"))
    #$agent.wait-for-job
    #($agent.run make)
    #$agent.wait-for-job
    #new-instruction-histogram  name = histogram -connect-all
    #histogram.enable-instrumentation
    #echo "START: Inside the simulated machine, traverse to the directory with the sort_magic: cd sort_magic\nExecute the program with the included dataset to start: ./sort_magic.o dataset.txt" 
}

$enable_instrumentation_string = "Type in the console: histogram.clear to start remove any data and start the profiling."
$disable_instrumentation_string = "Analyze the data by using: histogram.histogram"
$start_profiling_quicksort_string = "Start profiling the QUICKSORT by enabling the instrumentation!"
$type_in_console_string = "Clear all the data from the current measurements by typing: histogram.clear\nTo start executing the sort and profile it type: run "
$start_profiling_bubblesort_string = "Start profiling the BUBBLESORT by enabling the instrumentation!"



load-module pci_camera_component
create-pci-camera-component name = my_pci_capture
load-module module = pci_camera
connect my_pci_capture.pci_bus cnt1 = "board.mb.nb.pci_slot[1]"
instantiate-components
output-radix 16

#For further debug
#turning all verbose for the device
my_pci_capture.log-level -r 4
#write to the command reg for testing
#pci_capture.dev->input = ""
#board.mb.sb.ext_mem.map
#board.mb.sb.ext_mem.write 0xf1000000 + 0x14 0x1 0x4
#pci_capture.dev.bank.regs->buffer
#script-branch {
#    board.serconsole.con.bp-wait-for-console-string "simics@cl-qsp"
#    board.mb.sb.ext_mem->map = []
#    $map = (board.mb.sb.ext_conf->map)
#    board.mb.sb.ext_conf.write address = $map[0][0] + 0x10 value = 0xf1000000
#    board.mb.sb.ext_conf.write address = $map[0][0] + 0x4 value = 3
#    echo "Done setting device for test"
#}
